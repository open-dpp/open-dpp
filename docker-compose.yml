# ⚠️  EXAMPLE DEPLOYMENT - NOT FOR PRODUCTION USE
#
# This Docker Compose configuration is designed for local development and
# testing purposes only. For production deployments, you must implement High
# Availability (HA) setup with load balancers and multiple replicas

services:
  caddy:
    image: caddy:2-alpine
    ports:
      - ${SERVICE_CADDY_PORT}:${SERVICE_CADDY_PORT}
    environment:
      - SERVICE_KEYCLOAK_URL=${SERVICE_KEYCLOAK_URL}
      - SERVICE_APP_URL=${SERVICE_APP_URL}
      - SERVICE_MAILPIT_URL=${SERVICE_MAILPIT_URL}
      - SERVICE_MCP_SERVER_URL=${SERVICE_MCP_SERVER_URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped

  open-dpp:
    container_name: open-dpp
    restart: unless-stopped
    image: ghcr.io/open-dpp/open-dpp:local
    extra_hosts:
      - "${SERVICE_KEYCLOAK_HOST}:host-gateway"
    env_file:
      - .env
    depends_on:
      keycloak:
        condition: service_healthy

  mcp-server:
    container_name: mcp-server
    image: ghcr.io/open-dpp/mcp-server:main
    ports:
      - "3002:3000"
    environment:
      - DPP_API_URL=http://open-dpp:3000/api
      - PORT=3000

  api-mongo-db:
    ports:
      - ${SERVICE_MONGODB_PORT}:27017
    container_name: api-mongo-db
    logging:
      options:
        max-size: 1g
    volumes:
      - mongo_db:/data/db
      - mongo_config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${OPEN_DPP_MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${OPEN_DPP_MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${OPEN_DPP_MONGODB_DATABASE}
    image: mongo:6.0

  mailpit:
    container_name: mailpit
    image: axllent/mailpit:latest
    ports:
      - "8025:8025"
      - "8026:1025"
    environment:
      - MP_SMTP_AUTH=${OPEN_DPP_MAIL_MAILPIT_SMTP_AUTH}
      - MP_SMTP_AUTH_ALLOW_INSECURE=${OPEN_DPP_MAIL_MAILPIT_SMTP_ALLOW_INSECURE}

  minio:
    container_name: minio
    image: quay.io/minio/minio:latest
    command: minio server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${OPEN_DPP_S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${OPEN_DPP_S3_SECRET_KEY}
    volumes:
      - minio_data:/data
    ports:
      - "${OPEN_DPP_S3_PORT}:9000" # MinIO API
      - "9001:9001" # MinIO Console (Web UI)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:${OPEN_DPP_S3_PORT} ${OPEN_DPP_S3_ACCESS_KEY} ${OPEN_DPP_S3_SECRET_KEY};
      /usr/bin/mc mb myminio/${OPEN_DPP_S3_DEFAULT_BUCKET} --ignore-existing;
      /usr/bin/mc anonymous set public myminio/${OPEN_DPP_S3_DEFAULT_BUCKET};
      /usr/bin/mc mb myminio/${OPEN_DPP_S3_PROFILE_PICTURE_BUCKET} --ignore-existing;
      /usr/bin/mc anonymous set public myminio/${OPEN_DPP_S3_PROFILE_PICTURE_BUCKET};
      /usr/bin/mc version enable myminio/${OPEN_DPP_S3_DEFAULT_BUCKET};
      /usr/bin/mc version enable myminio/${OPEN_DPP_S3_PROFILE_PICTURE_BUCKET};
      exit 0;
      "

  clamav-rest:
    image: ajilaag/clamav-rest

volumes:
  caddy_data:
  caddy_config:
  minio_data:
  mongo_db:
  mongo_config:
  api_db:
